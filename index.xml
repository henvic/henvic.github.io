<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on Henrique Vicente</title>
    <link>https://henvic.dev/</link>
    <description>Recent content in Home on Henrique Vicente</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 16 Jan 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://henvic.dev/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Environment variables, config, secrets, and globals</title>
      <link>https://henvic.dev/posts/env/</link>
      <pubDate>Sat, 16 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://henvic.dev/posts/env/</guid>
      <description>At some point in time, perhaps with the advent of The Twelve-Factor App methodology, we saw new server-side applications moving from a file-based configuration to an environment variable configuration approach.
Many developers like to use environment variables for credentials because they are ephemeral. By relying on them, you might avoid leaking credentials on the web by accidentally checking them on public repositories or in case of a directory traversal attack vulnerability.</description>
    </item>
    
    <item>
      <title>signal.NotifyContext: handling cancelation with Unix signals using context</title>
      <link>https://henvic.dev/posts/signal-notify-context/</link>
      <pubDate>Wed, 16 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://henvic.dev/posts/signal-notify-context/</guid>
      <description>From Go 1.16 onwards, you&amp;rsquo;ll be able to use
1 2  ctx, stop := signal.NotifyContext(context.Background(), os.Interrupt) defer stop()   to control context cancelation using Unix signals, simplifying handling operating system signals in Go for certain common cases. This is my first contribution to the Go standard library, and I am very excited!
Why When writing CLI code, I often needed to handle cancellation – for instance, when a user presses CTRL+C producing an interrupt signal.</description>
    </item>
    
    <item>
      <title>I&#39;m starting an opensource e-commerce project.</title>
      <link>https://henvic.dev/posts/e-commerce/</link>
      <pubDate>Wed, 17 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://henvic.dev/posts/e-commerce/</guid>
      <description>Most e-commerce platforms operate in a way that makes stores relying on them hostage due to vendor lock-in models. E-commerce is something that can get complex fast. Search engine optimization (SEO), inventory management, order status, and user experience are essential and can get hard quickly. Especially when in light of the danger of trying to make everything customizable. Substantial transaction fees drive away businesses operating on tight profit margins.  market is an opensource e-commerce software dedicated to the public domain to help small and medium businesses to establish their online presence with a high-quality website without gotchas.</description>
    </item>
    
    <item>
      <title>Counter-Strike code leaked: should you worry? What if your code leaks? Learn how to deliver software securely.</title>
      <link>https://henvic.dev/posts/cs-security/</link>
      <pubDate>Wed, 22 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://henvic.dev/posts/cs-security/</guid>
      <description>The source code for the game Counter-Strike: GO has leaked today. I&amp;rsquo;m sad to see many concerned users decided not to play the game anymore, for now, worried about Remote Code Execution (RCE). Valve told them they&amp;rsquo;ve reviewed the code, and there&amp;rsquo;s no reason for users to worry.
Here&amp;rsquo;s I discuss what everyone should be doing about distributing software to the general public safely, and why I trust this statement:</description>
    </item>
    
    <item>
      <title>Homelab: Intel NUC with the ESXi hypervisor</title>
      <link>https://henvic.dev/posts/homelab/</link>
      <pubDate>Mon, 20 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://henvic.dev/posts/homelab/</guid>
      <description>In this blog post, I&amp;rsquo;m going to talk a little about my experience running multiple operating systems with an Intel NUC I recently bought and the ESXi 7 hypervisor. My main idea was to use this homelab for:
  Network Area Storage (NAS)
  Kubernetes cluster
  FreeBSD playground
  Managing backup
  Stage and development machine for Go projects
  Hardware I thought I&amp;rsquo;d get a full-size ATX tower case with plenty of space for expansion and components, but I was always open to any form factor.</description>
    </item>
    
    <item>
      <title>About me</title>
      <link>https://henvic.dev/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://henvic.dev/about/</guid>
      <description>During kindergarten, I would come back home from school and turn on an IBM XT clone with a CRT phosphorous monochrome (green) monitor to play with it. It used floppy disks, ran DOS, and barely had any disk space. I would sometimes just type random garbage on it. It was connected to a noisy dot matrix printer too. I also had limited access to other better computers from time to time during my childhood.</description>
    </item>
    
    <item>
      <title>Favorites</title>
      <link>https://henvic.dev/favorites/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://henvic.dev/favorites/</guid>
      <description>Books Technology  Inviting Disaster: Lessons from the edge of technology - James R. Chiles Normal Accidents: Living with High-Risk Technology - Charles Perrow The Unix Programming Environment The Art Of Unix Programming - Eric S. Raymond Do No Harm: Stories of Life, Death, and Brain Surgery - Henry Marsh Clean Code: A Handbook of Agile Software Craftsmanship  Free markets, libertarianism  The Bastiat Collection (contains both works below) That Which Is Seen, and That Which Is Not Seen - Frédéric Bastiat The Law - Frédéric Bastiat The Production of Security - Gustave de Molinari The Tuttle Twins (books for educating children with a foundation of liberty) Econlib - The Library of Economics and Liberty Against Intellectual Property - Stephen Kinsella Tom Woods Foundation for Economic Education The Online Library of Liberty  Programming  Go Proverbs What Every Computer Scientist Should Know About Floating-Point Arithmetic A Tour of Go Hypertext Transfer Protocol &amp;ndash; HTTP/1.</description>
    </item>
    
    <item>
      <title>Opensource</title>
      <link>https://henvic.dev/opensource/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://henvic.dev/opensource/</guid>
      <description>I have created and contributed to many opensource projects. Here is a selected few.
On my portfolio and GitHub profile, you can find more opensource projects.
I created   clino is Go package for creating CLI (command-line interface) tools with multiple commands. Wednesday, 25 March 2020   httpretty is Go package for printing your HTTP requests on the terminal. Sunday, 2 February 2020   kubeapply is kubeapply is a microservice for running kubectl apply through a web API.</description>
    </item>
    
    <item>
      <title>Portfolio</title>
      <link>https://henvic.dev/portfolio/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://henvic.dev/portfolio/</guid>
      <description>httpretty  httpretty is a Go package to print the HTTP requests of your Go programs on the terminal screen.
It is mostly inspired in curl&#39;s verbose mode, and also on the httputil.DumpRequest and similar functions.  It implements a net/http RoundTripper for the HTTP client and an HTTP Handler for the server that intercepts the requests and extracts information out of it in a safe way, without modifying the original values wrapping your HTTP client transport layer or HTTP request multiplexer.</description>
    </item>
    
    <item>
      <title>Talks</title>
      <link>https://henvic.dev/talks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://henvic.dev/talks/</guid>
      <description>Year 2018   Using a Socket.Io Client Implementation for Go  Westside GoLang Meetup Los Angeles, CA Thursday, 12 April 2018    CLI: How can people contribute? WeDeploy&#39;s Retreat, Liferay Tuesday, 23 January 2018    Year 2017   picel - HTTP middleware for image processing (undergraduate project)  UFPE Tuesday, 12 December 2017   Write in Go: The Go Programming Language (slides). Liferay&#39;s Developer Retreat 2017 Thursday, 27 January 2017   Year 2016   Writing a modern CLI tool Liferay Friday, 2 September 2016   Year 2015   Writing CLI tools with Node (slides, notes).</description>
    </item>
    
  </channel>
</rss>
